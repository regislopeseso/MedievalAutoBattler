// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedievalAutoBattler.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250423182831_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsFinished")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.Property<string>("Results")
                        .HasColumnType("longtext");

                    b.Property<int>("SaveId")
                        .HasColumnType("int");

                    b.Property<string>("Winner")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NpcId");

                    b.HasIndex("SaveId");

                    b.ToTable("battles");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDummy")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UpperHand")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("cards");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.Deck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SaveId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SaveId");

                    b.ToTable("decks");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.Npc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDummy")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("npcs");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.NpcDeckEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("NpcId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("NpcId");

                    b.ToTable("npcDeckEntries");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.PlayerCardEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SaveId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("SaveId");

                    b.ToTable("playerCardEntries");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.PlayerDeckEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeckId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PlayerCardEntryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeckId");

                    b.HasIndex("PlayerCardEntryId");

                    b.ToTable("playerDeckEntries");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.PlayerSave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllCardsCollectedTrophy")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AllNpcsDefeatedTrophy")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CountBoosters")
                        .HasColumnType("int");

                    b.Property<int>("CountDefeats")
                        .HasColumnType("int");

                    b.Property<int>("CountMatches")
                        .HasColumnType("int");

                    b.Property<int>("CountVictories")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PlayerLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("playersSaves");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.Battle", b =>
                {
                    b.HasOne("MedievalAutoBattler.Models.Entities.Npc", "Npc")
                        .WithMany()
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedievalAutoBattler.Models.Entities.PlayerSave", "Save")
                        .WithMany()
                        .HasForeignKey("SaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Npc");

                    b.Navigation("Save");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.Deck", b =>
                {
                    b.HasOne("MedievalAutoBattler.Models.Entities.PlayerSave", "Save")
                        .WithMany("Decks")
                        .HasForeignKey("SaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Save");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.NpcDeckEntry", b =>
                {
                    b.HasOne("MedievalAutoBattler.Models.Entities.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedievalAutoBattler.Models.Entities.Npc", "Npc")
                        .WithMany("Deck")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.PlayerCardEntry", b =>
                {
                    b.HasOne("MedievalAutoBattler.Models.Entities.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedievalAutoBattler.Models.Entities.PlayerSave", "Save")
                        .WithMany("PlayerCardEntries")
                        .HasForeignKey("SaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Save");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.PlayerDeckEntry", b =>
                {
                    b.HasOne("MedievalAutoBattler.Models.Entities.Deck", "Deck")
                        .WithMany("PlayerDeckEntries")
                        .HasForeignKey("DeckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedievalAutoBattler.Models.Entities.PlayerCardEntry", "PlayerCardEntry")
                        .WithMany()
                        .HasForeignKey("PlayerCardEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deck");

                    b.Navigation("PlayerCardEntry");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.Deck", b =>
                {
                    b.Navigation("PlayerDeckEntries");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.Npc", b =>
                {
                    b.Navigation("Deck");
                });

            modelBuilder.Entity("MedievalAutoBattler.Models.Entities.PlayerSave", b =>
                {
                    b.Navigation("Decks");

                    b.Navigation("PlayerCardEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
